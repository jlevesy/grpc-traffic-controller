/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ClusterApplyConfiguration represents an declarative configuration of the Cluster type for use
// with apply.
type ClusterApplyConfiguration struct {
	Name        *string                       `json:"name,omitempty"`
	MaxRequests *uint32                       `json:"maxRequests,omitempty"`
	Service     *ServiceRefApplyConfiguration `json:"service,omitempty"`
	Localities  []LocalityApplyConfiguration  `json:"localities,omitempty"`
}

// ClusterApplyConfiguration constructs an declarative configuration of the Cluster type for use with
// apply.
func Cluster() *ClusterApplyConfiguration {
	return &ClusterApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ClusterApplyConfiguration) WithName(value string) *ClusterApplyConfiguration {
	b.Name = &value
	return b
}

// WithMaxRequests sets the MaxRequests field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxRequests field is set to the value of the last call.
func (b *ClusterApplyConfiguration) WithMaxRequests(value uint32) *ClusterApplyConfiguration {
	b.MaxRequests = &value
	return b
}

// WithService sets the Service field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Service field is set to the value of the last call.
func (b *ClusterApplyConfiguration) WithService(value *ServiceRefApplyConfiguration) *ClusterApplyConfiguration {
	b.Service = value
	return b
}

// WithLocalities adds the given value to the Localities field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Localities field.
func (b *ClusterApplyConfiguration) WithLocalities(values ...*LocalityApplyConfiguration) *ClusterApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithLocalities")
		}
		b.Localities = append(b.Localities, *values[i])
	}
	return b
}
