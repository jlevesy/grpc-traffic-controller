/*
Copyright 2023.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/jlevesy/grpc-traffic-controller/api/gtc/v1alpha1"
)

// FaultAbortApplyConfiguration represents an declarative configuration of the FaultAbort type for use
// with apply.
type FaultAbortApplyConfiguration struct {
	Status     *uint32                     `json:"grpc,omitempty"`
	Metadata   *v1alpha1.MetadataFault     `json:"metadata,omitempty"`
	Percentage *FractionApplyConfiguration `json:"percentage,omitempty"`
}

// FaultAbortApplyConfiguration constructs an declarative configuration of the FaultAbort type for use with
// apply.
func FaultAbort() *FaultAbortApplyConfiguration {
	return &FaultAbortApplyConfiguration{}
}

// WithStatus sets the Status field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Status field is set to the value of the last call.
func (b *FaultAbortApplyConfiguration) WithStatus(value uint32) *FaultAbortApplyConfiguration {
	b.Status = &value
	return b
}

// WithMetadata sets the Metadata field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Metadata field is set to the value of the last call.
func (b *FaultAbortApplyConfiguration) WithMetadata(value v1alpha1.MetadataFault) *FaultAbortApplyConfiguration {
	b.Metadata = &value
	return b
}

// WithPercentage sets the Percentage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Percentage field is set to the value of the last call.
func (b *FaultAbortApplyConfiguration) WithPercentage(value *FractionApplyConfiguration) *FaultAbortApplyConfiguration {
	b.Percentage = value
	return b
}
