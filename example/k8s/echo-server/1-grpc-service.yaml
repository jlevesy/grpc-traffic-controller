# gRFC A27 examples
# https://github.com/grpc/proposal/blob/master/A27-xds-global-load-balancing.md
---
# Basic example: one listeners maps to a route and a single K8s service
# Listener address: xds://echo-server-basic
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: basic-example
  namespace: echo-server
spec:
  listener: echo-server-basic
  routes:
    - clusters:
        - name: default
  clusters:
    - name: default
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Locality based Weighted Round Robin: This example makes all gRPC clients using this listener send 20% of their traffic to
# the v2 instance of the echo-server, and 80% to the v1 instance.
# Listener address: xds://echo-server-locality-wrr
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: locality-wrr
  namespace: echo-server
spec:
  listener: echo-server-locality-wrr
  routes:
    - clusters:
        - name: default
  clusters:
    - name: default
      localities:
        - weight: 80
          service:
            name: echo-server-v1
            port:
              name: grpc
        - weight: 20
          service:
            name: echo-server-v2
            port:
              name: grpc
---
# Locality fallback: This example makes all gRPC clients using this listener send 100% the the `echo-server-v2` service
# but fall back to the v1 instance if the v2 service goes down.
# Listener address: xds://echo-server-fallback
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: fallback
  namespace: echo-server
spec:
  listener: echo-server-fallback
  routes:
    - clusters:
        - name: default
  clusters:
    - name: default
      localities:
        - priority: 1
          service:
            name: echo-server-v1
            port:
              name: grpc
        - priority: 0
          service:
            name: echo-server-v2
            port:
              name: grpc
# gRFC A28 examples
# https://github.com/grpc/proposal/blob/master/A28-xds-traffic-splitting-and-routing.md
---
# Path based routing: Route calls to premium service RPC to the echo-server v2
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: path-matcher
  namespace: echo-server
spec:
  listener: echo-server-path
  routes:
    - path:
        path: /echo.Echo/EchoPremium
      clusters:
        - name: v2
    - clusters:
        - name: v1
  clusters:
    - name: v2
      localities:
        - service:
            name: echo-server-v2
            port:
              name: grpc
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Path Prefix based routing: Route calls to premium service RPC to the echo-server v2
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: prefix-matcher
  namespace: echo-server
spec:
  listener: echo-server-prefix
  routes:
    - path:
        prefix: /echo.Echo/EchoP
      clusters:
        - name: v2
    - clusters:
        - name: v1
  clusters:
    - name: v2
      localities:
        - service:
            name: echo-server-v2
            port:
              name: grpc
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Regex Prefix based routing: Route calls to premium service RPC to the echo-server v2
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: regex-matcher
  namespace: echo-server
spec:
  listener: echo-server-regex
  routes:
    - path:
        regex:
          # Regex must match the entierity of the path.
          regex: .*/EchoPremium
      clusters:
        - name: v2
    - clusters:
        - name: v1
  clusters:
    - name: v2
      localities:
        - service:
            name: echo-server-v2
            port:
              name: grpc
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Header based routing: Route calls v2 if header "x-version" has the value "v2"
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: header-exact-matcher
  namespace: echo-server
spec:
  listener: echo-server-header-exact
  routes:
    - headers:
        - name: "x-version"
          exact: "v2"
      clusters:
        - name: v2
    - clusters:
        - name: v1
  clusters:
    - name: v2
      localities:
        - service:
            name: echo-server-v2
            port:
              name: grpc
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Fractional traffic splitting: 20% of calls go v2 the other 80% hit v1
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: fractional-route-matcher
  namespace: echo-server
spec:
  listener: echo-server-fraction-route
  routes:
    - fraction:
        numerator: 20
      clusters:
        - name: v2
    - clusters:
        - name: v1
  clusters:
    - name: v2
      localities:
        - service:
            name: echo-server-v2
            port:
              name: grpc
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Circuit breaker.
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: circuit-breaker
  namespace: echo-server
spec:
  listener: echo-server-circuit-breaker
  routes:
    - clusters:
        - name: v1
  clusters:
    - name: v1
      maxRequests: 20
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc

---
# Delay Injection filter fixed
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: delay-fault-injection
  namespace: echo-server
spec:
  listener: echo-server-delay-fixed-fault
  filters:
    - fault:
        delay:
          fixed: 2s
          percentage:
            numerator: 50
  routes:
    - clusters:
        - name: v1
  clusters:
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
---
# Fault Injection filter metadata
apiVersion: api.kxds.dev/v1alpha1
kind: XDSService
metadata:
  name: fault-injection-header
  namespace: echo-server
spec:
  listener: echo-server-header-fault
  filters:
    - fault:
        abort:
          header: {}
          percentage:
            numerator: 100
        delay:
          header: {}
          percentage:
            numerator: 100
  routes:
    - clusters:
        - name: v1
  clusters:
    - name: v1
      localities:
        - service:
            name: echo-server-v1
            port:
              name: grpc
